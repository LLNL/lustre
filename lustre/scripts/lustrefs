#!/bin/bash
#
# lustrefs      Mount Lustre filesystems.
#
# Authors:      Jacob Berkman <jacob@clusterfs.com>
#
# Based on the netfs script:
#
# Authors:	Bill Nottingham <notting@redhat.com>
# 		Miquel van Smoorenburg, <miquels@drinkel.nl.mugnet.org>
#
# chkconfig: - 26 74
# description: Mounts and unmounts all Lustre mount points.
#
### BEGIN INIT INFO
# Provides: lustrefs
# Required-Start: $network $remote_fs +sshd +lustre
# Required-Stop: $network $remote_fs
# Should-Start: 
# Should-Stop: 
# Default-Start: 3 5
# Default-Stop: 0 1 2 6
# Short-Description: Mounts and unmounts all Lustre mount points.
### END INIT INFO

[ -d /var/dumps ] || mkdir -p -m 755 /var/dumps

# Source function library.
if [ -f /etc/init.d/functions ]; then
   . /etc/init.d/functions
fi

# Source networking configuration.
if [ -f /etc/sysconfig/network ]; then
   . /etc/sysconfig/network
fi

# Source lsb-functions.
if [ -f /lib/lsb/init-functions ]; then
   . /lib/lsb/init-functions
fi

[ -x /sbin/fuser ] && FUSER=/sbin/fuser
[ -x /bin/fuser ] && FUSER=/bin/fuser

# Check that networking is up.
[ "${NETWORKING}" = "no" ] && exit 0

# Red Hat has it's own "action"-function for RHGB-messages.
lustre_action () {
	STRING=$1
	shift
	if [ $(typeset -F action) ]; then
		action "$STRING" $*
		rc=$?
	else
		$*
		rc=$?
		if [ $rc = 0 ]; then
			log_success_msg "$STRING"
		else
			log_failure_msg "$STRING"
		fi
	fi
	return $rc
}

LUSTREFSTAB=`LC_ALL=C awk '!/^#/ && $3 == "lustre" && $4 !~ /noauto/ { print $2 }' /etc/fstab`
LUSTREMTAB=`LC_ALL=C awk '!/^#/ && ($3 ~ "lustre") { print $2 }' /proc/mounts`

# See how we were called.
case "$1" in
  start)
	[ -n "$LUSTREFSTAB" ] && lustre_action $"Mounting Lustre filesystems: " mount -a -t lustre
	touch /var/lock/subsys/lustrefs
	;;
  stop)
  	[ -n "$LUSTREMTAB" ] && {
		sig=
		retry=3
		remaining=`LC_ALL=C awk '!/^#/ && $3 ~ /^lustre/ && $2 != "/" {print $2}' /proc/mounts`
		while [ -n "$remaining" -a "$retry" -gt 0 ]
		do
			if [ "$retry" -lt 3 ]; then
				lustre_action $"Unmounting Lustre filesystems (retry): " umount -f -a -t lustre
			else
				lustre_action $"Unmounting Lustre filesystems: " umount -a -t lustre
			fi
			sleep 2
			remaining=`LC_ALL=C awk '!/^#/ && $3 ~ /^lustre/ && $2 != "/" {print $2}' /proc/mounts`
			[ -z "$remaining" ] && break
			$FUSER -k -m $sig $remaining >/dev/null
			sleep 5
			retry=$(($retry - 1))
			sig=-9
		done
	}
	rm -f /var/lock/subsys/lustrefs
	;;
  status)
	if [ -f /proc/mounts ] ; then
		[ -n "$LUSTREFSTAB" ] && {
		      echo $"Configured Lustre mountpoints: "
		      for fs in $LUSTREFSTAB; do echo $fs ; done
		}
		[ -n "$LUSTREMTAB" ] && {
                      echo $"Active Lustre mountpoints: "
		      for fs in $LUSTREMTAB; do echo $fs ; done
		}
	else
		echo $"/proc filesystem unavailable"
	fi
	;;
  restart)
	$0 stop
	$0 start
	;;
  reload)
        $0 start
	;;
  *)
	echo $"Usage: $0 {start|stop|restart|reload|status}"
	exit 1
esac

exit 0
